name: Build MCP Installers

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
            output_name: Academiadepolitie_com_MCP_Setup.exe
          - os: macos-latest  
            name: macOS
            output_name: Academiadepolitie_com_MCP_macOS.zip
          - os: ubuntu-latest
            name: Linux
            output_name: Academiadepolitie_com_MCP_Linux

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Build installer (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name Academiadepolitie_com_MCP_Installer installer_standalone.py
        move "dist\Academiadepolitie_com_MCP_Installer.exe" "Academiadepolitie_com_MCP_Setup.exe"
    
    - name: Build installer (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name Academiadepolitie_com_MCP_Installer installer_standalone.py
        cd dist
        zip -r ../Academiadepolitie_com_MCP_macOS.zip Academiadepolitie_com_MCP_Installer.app
    
    - name: Build installer (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name Academiadepolitie_com_MCP_Installer installer_standalone.py
        mv "dist/Academiadepolitie_com_MCP_Installer" "Academiadepolitie_com_MCP_Linux"
        chmod +x Academiadepolitie_com_MCP_Linux
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: installer-${{ matrix.name }}
        path: ${{ matrix.output_name }}
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.output_name }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}